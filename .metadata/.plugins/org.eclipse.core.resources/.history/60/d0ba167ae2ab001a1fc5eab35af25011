package kadai1;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.util.Objects;
import java.util.Scanner;

/**
 * 
 * ファイルの中の任意の文字列を任意の文字列に変換し、新規ファイルに書き込みます
 * @param string 元のパス
 * @param string 先のパス
 * @author sakaishow
 *
 */
public class FileTextReplaceRobot {
	Path fromPath;
	Path toPath;
	String fromStr;
	String toStr;
	
	FileTextReplaceRobot(String fromPath, String toPath, String fromStr, String toStr) {
		this.fromPath = Path.of(fromPath);
		this.toPath = Path.of(toPath);
		this.fromStr = fromStr;
		this.toStr = toStr;
	}
	
	void run() {
		Scanner sc = new Scanner(System.in);
		String input;
		Charset charset = Charset.forName("MS932");
		
		try {
			while(true) {
				// 元のファイルが存在するか確認
				if(!Files.exists(fromPath)) {
					System.out.println(getFileName(fromPath) + "が存在しません。作成してください");
					System.out.println("作成したら「1」, キャンセルする場合は「1以外」を入力してください");
					input = sc.nextLine();
					if(Objects.equals(input, "1")) {
						continue;
					}else {
						sc.close();
						System.out.println("キャンセルしました");
						break;
					}
				}
				
				// 元のファイルに文字が存在するか確認
				String originText = Files.readString(fromPath, charset);
				if(originText.isEmpty()) {
					System.out.println(getFileName(fromPath) + "に文字を入力してください");
					System.out.println("入力したら「1」, キャンセルする場合は「1以外」を入力してください");
					input = sc.nextLine();
					if(Objects.equals(input, "1")) {
						continue;
					}else {
						System.out.println("キャンセルしました");
						sc.close();
						break;
					}
				}
				
				String replacedText = originText.replaceAll(this.fromStr, this.toStr);
				Files.copy(fromPath, toPath, StandardCopyOption.REPLACE_EXISTING);
				Files.writeString(toPath, replacedText);
				System.out.println("処理が完了しました");
				break;
			} 
		} catch(IOException e) {
			e.printStackTrace();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static String getFileName(Path path) {
		String strPath = path.toString();
		String[] ele = strPath.split("/");
		return ele[ele.length - 1];
	}
}
